#ifndef BALL_H_INCLUDED
#define BALL_H_INCLUDED

#include "../Object.h"
#include "../shapes/Circle.h"
#include <vector>
#include <allegro5/bitmap.h>
#include <string>
#include <queue>

enum class Dir;
enum class BallState
{
	NORMAL,
	EXPLOSION,
	BALLSTATE_MAX
};
class Ball : public Object
{
public:
	static Ball *get_bitmap(BallState type);
	static Ball *create_ball(BallState type,  const std::vector<Point> &path);
	Ball(const std::vector<Point> &path,BallState type);
	void update();
	void draw();
	int bitmap_switch_counter;
	int bitmap_switch_freq;
	int bitmap_img_id;
	std::vector<std::vector<int>> bitmap_img_ids;
private:
	double speed = 10.0;
	int attack_freq = 10;
	int counter = 0;
	BallState state;
	Dir dir;
	std::queue<Point> path;
};

#endif // BALL_H_INCLUDED
